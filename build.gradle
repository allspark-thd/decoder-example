buildscript {
	ext {
		springBootVersion = '1.3.2.RELEASE'
	}
	repositories {
		mavenCentral()
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.springframework.build.gradle:propdeps-plugin:0.0.7")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'propdeps'
apply plugin: 'propdeps-idea'

jar {
	baseName = 'credential-decoder'
	version = '0.0.1-SNAPSHOT'
}

repositories {
	mavenCentral()
}

task sqlStartup(type: Exec) {
    commandLine 'mysql.server', 'start'
}

task sqlStop(type: Exec) {
    commandLine 'mysql.server', 'stop'
}

dependencies {
	optional "org.springframework.boot:spring-boot-configuration-processor"
}

compileJava.dependsOn(processResources)

//project.tasks.testClasses.dependsOn project.tasks.sqlStartup
//project.tasks.build.finalizedBy project.tasks.sqlStop

dependencies {
	compile('org.springframework.boot:spring-boot-starter')
	compile("org.springframework.boot:spring-boot-starter-actuator")
	compile("org.springframework.boot:spring-boot-starter-web")
	compile('org.mariadb.jdbc:mariadb-java-client:1.3.4')
	compile("com.fasterxml.jackson.core:jackson-databind")
	compile('org.json:json:20151123')
  compile("org.springframework:spring-web")
	compile('org.apache.httpcomponents:httpclient:4.5.1')
  compile fileTree(dir: 'libs', include: ['*.jar'])
  testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('junit:junit:4.12')
	testCompile('org.hamcrest:hamcrest-all:1.3')
	testCompile('org.mockito:mockito-all:1.10.19')
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.9'
}

